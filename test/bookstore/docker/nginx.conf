daemon off;

user nobody nogroup;

worker_processes 1;

error_log /var/log/nginx/error.log debug;

events { worker_connections 4096; }

http {
  include mime.types;
  server_tokens off;

  # set max body size to 32m as appengine supports.
  client_max_body_size 32m;

  upstream app_server {
    server gaeapp:8080;
  }

  upstream flex_agent {
    server 127.0.0.1:8000;
  }

  endpoints {
    metadata_server;
  }

  server {
    # Running port
    listen 8080;

    access_log /var/log/nginx/access.log;

    location / {
      # Begin Endpoints v2 Support
      endpoints {
        on;
        api /etc/service.json;
      }
      # End Endpoints v2 Support

      proxy_pass http://app_server;
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Google-Real-IP $remote_addr;

      # Begin Endpoints v2 Support
      proxy_set_header X-Endpoint-API-UserInfo $endpoints_api_userinfo;
      # End Endpoints v2 Support

      # 86400 seconds (24 hours) is the maximum a server is allowed.
      proxy_send_timeout 86400s;
      proxy_read_timeout 86400s;

      location /_ah/health {
        # Begin Endpoints v2 Support
        endpoints { off; }
        # End Endpoints v2 Support

        if ($http_x_google_vme_health_check = 1) {
           proxy_pass http://app_server;
           break;
        }
        proxy_pass http://flex_agent;
      }

      location /_ah/vm_health {
        # Begin Endpoints v2 Support
        endpoints { off; }
        # End Endpoints v2 Support

        proxy_pass http://flex_agent;
      }
    }

    include /var/lib/nginx/extra/*.conf;
  }

  server {
    # expose /nginx_status but on a different port (8090) to avoid
    # external visibility / conflicts with the app.
    listen 8090;
    location /nginx_status {
      stub_status on;
      access_log off;
    }
    location / {
      root /dev/null;
    }
  }
}
