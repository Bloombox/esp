#!/bin/bash
#
# Copyright (C) Endpoints Server Proxy Authors
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
################################################################################
#

BUILD_DEPS_URL='https://storage.googleapis.com/build-dependencies'
ZLIB_ARCHIVE='zlib-1.2.8.tar.gz'
PCRE_ARCHIVE='pcre-8.38.tar.gz'
APACHE_TARBALLS_URL='https://storage.googleapis.com/apache_tarballs'
APR_ARCHIVE='apr-1.5.2.tar.gz'
APR_UTIL_ARCHIVE='apr-util-1.5.4.tar.gz'
HTTPD_ARCHIVE='httpd-2.4.17.tar.gz'

if [[ "$(uname)" != "Linux" ]]; then
  echo 'Run on Linux only.'
  exit 1
fi

# Extract archive to a directory
function download_extract_tar () {
  local url="${1}"
  local archive="${2}"
  local dir="${3}"
  rm -rf ${archive}  || error_exit "Could not delete archive ${archive}"
  echo "Downloading ${archive}"
  retry wget "${url}/${archive}" || error_exit "Cannot download ${archive}"
  rm -rf ${dir} || error_exit "Could not delete dir ${dir}"
  mkdir -p "${dir}" || error_exit "Could not create dir ${dir}"
  echo "Extracting ${archive}"
  tar zxvf "${archive}" -C "${dir}" --strip-components=1 \
    || error_exit "Could not extract ${archive}"
}

ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
. ${ROOT}/script/all-utilities || { echo 'Cannot load Bash utilities'; exit 1; }

export LDFLAGS=-L/usr/local/lib
export CPPFLAGS=-I/usr/local/include
export CXXFLAGS=-std=c++1y
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/ssl/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig

download_extract_tar "${BUILD_DEPS_URL}" "${ZLIB_ARCHIVE}" zlib
pushd zlib
echo 'Building zlib'
CFLAGS=-fPIC ./configure --shared || error_exit "Cannot configure ${ZLIB_ARCHIVE}"
make || error_exit "Cannot compile ${ZLIB_ARCHIVE}"
${SUDO} make install || error_exit "Cannot install ${ZLIB_ARCHIVE}"
popd

download_extract_tar "${BUILD_DEPS_URL}" "${PCRE_ARCHIVE}" pcre
echo 'Building pcre.'
pushd pcre
./configure \
  --enable-jit \
  --enable-utf8 \
  --enable-unicode-properties || error_exit "Cannot configure ${PCRE_ARCHIVE}"
make -j8 || error_exit "Cannot compile ${PCRE_ARCHIVE}"
${SUDO} make install || error_exit "Cannot install ${PCRE_ARCHIVE}"
popd

download_extract_tar "${APACHE_TARBALLS_URL}" "${HTTPD_ARCHIVE}" httpd
download_extract_tar "${APACHE_TARBALLS_URL}" "${APR_ARCHIVE}" httpd/srclib/apr
download_extract_tar "${APACHE_TARBALLS_URL}" "${APR_UTIL_ARCHIVE}" httpd/srclib/apr-util

echo 'Building Apache.'
pushd httpd
./configure \
    --with-included-apr \
    --enable-ssl \
    --with-ssl=/usr/local/ssl \
    --enable-ssl-staticlib-deps \
    --enable-mods-static=ssl || error_exit 'Cannot configure Apache'
make || error_exit 'Cannot compile Apache'
${SUDO} make install 'Cannot install Apache'
popd

echo 'Building python-gflags.'
git clone https://github.com/google/python-gflags || error_exit 'Cannot clone python-gflags'
pushd python-gflags
${SUDO} python ./setup.py install || error_exit 'Cannot install python-gflags'
popd
